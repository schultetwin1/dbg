name: CI

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:
  ci:
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        include:
          - rust: stable
            target: 'x86_64-unknown-linux-musl'
            host: 'ubuntu-latest'
            os: 'linux'
          - rust: stable
            target: 'x86_64-pc-windows-msvc'
            host: 'windows-latest'
            os: 'win'
          - rust: stable
            target: 'x86_64-apple-darwin'
            host: 'macos-latest'
            os: 'mac'

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v2

      - name: 'Set static CRT as default'
        run: |
          echo "RUSTFLAGS=-C target-feature=+crt-static" >> $GITHUB_ENV

      - name: 'Install MUSL'
        if: ${{ contains(matrix.target, 'musl') && contains(matrix.host, 'ubuntu') }}
        run: sudo apt-get install musl-tools

      - name: 'Setup Rust Toolchain'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, clippy

      - name: 'Build'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target ${{ matrix.target }}

      - name: 'Test'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --target ${{ matrix.target }}

      - name: 'Format Check'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: 'Clippy Check'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --release --all-features --target ${{ matrix.target }} -- -D warnings

      # Publish the recently built symbols
      - name: 'Publish built symbols'
        run: |
          ./target/${{ matrix.target }}/release/symbols -c ci.toml upload target/${{ matrix.target }}/release/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: symbols-${{ matrix.os }}
          path: |
            target/${{ matrix.target }}/release/symbols
            target/${{ matrix.target }}/release/symbols.exe